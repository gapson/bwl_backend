"""
Django settings for bwl project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
from datetime import timedelta
from pathlib import Path
from rest_framework.settings import APISettings as _APISettings
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'b8&$xx3^w5_@b!dg$(8nv^yw9@-yrifbvsfmo*^9)b+&od+s=2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
SITE_ID = 1

ALLOWED_HOSTS = ['localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'corsheaders',
    'drf_yasg',
    'rest_framework',
    'djoser',
    'content',
    'cities_light',
    'rest_framework_simplejwt',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware'
]
CORS_ORIGIN_ALLOW_ALL = True
ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates', BASE_DIR / 'content/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Email Settings
# The backend to use for sending emails.
# For the list of available backends see Sending e-mail.
#EMAIL_BACKEND           = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

EMAIL_HOST              = 'smtp.gmail.com'
EMAIL_HOST_PASSWORD     = ''
# If empty, Django won't attempt authentication.
EMAIL_HOST_USER         = ''
# Port to use for the SMTP server defined in EMAIL_HOST.
EMAIL_PORT = 587
EMAIL_SUBJECT_PREFIX    = '[BWL Team] '

# Whether to use a TLS (secure) connection when talking to the SMTP server.
EMAIL_USE_TLS           = True

# Default e-mail address to use for various automated correspondence from the site manager(s).
DEFAULT_FROM_EMAIL      = ''
# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
SESSION_ENGINE = "django.contrib.sessions.backends.file"
SESSION_FILE_PATH = BASE_DIR / 'scripts/tmp'

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_USE_JWT = True
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',  
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 40
}
SIMPLE_JWT = {
   'AUTH_HEADER_TYPES': ('JWT',),
   'ACCESS_TOKEN_LIFETIME': timedelta(days=30),
   'REFRESH_TOKEN_LIFETIME': timedelta(days=90),
   'ROTATE_REFRESH_TOKENS': True,
   'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
}

DJOSER = {
    'PASSWORD_RESET_CONFIRM_URL': 'auth/user/password/reset/confirm/{uid}/{token}',
    'SERIALIZERS': {
        'user_create': 'content.serializers.UserRegistrationSerializer',
        'user': 'content.serializers.UserSerializer',
        'current_user': 'content.serializers.UserSerializer'
    }
}
SWAGGER_SETTINGS = {
   'USE_SESSION_AUTH': False,
   'SECURITY_DEFINITIONS': {
      'JWT': {
         'type': 'JWT',
         'authorizationUrl': 'auth/login/',
         'tokenUrl': 'auth/create_token/',
         'flow': 'accessCode',
         'scopes': {
             'read:groups': 'read groups',
         }
      }
    }
   #'SECURITY_DEFINITIONS': {
      #'Basic': {
            #'type': 'basic'
      #},
      #'JWT': {
            #'type': 'jwt',
      #}
   #}
}
# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LOCALE_PATHS = [BASE_DIR / 'translations/locale']
LANGUAGE_CODE = 'en-En'
LANGUAGES = (
    ('en', _('English')),
    ('fr', _('French')),
)
MODELTRANSLATION_DEFAULT_LANGUAGE = 'en'
MODELTRANSLATION_PREPOPULATE_LANGUAGE = MODELTRANSLATION_DEFAULT_LANGUAGE

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
STATIC_ROOT = BASE_DIR / 'static/collected'
MEDIA_ROOT = BASE_DIR / 'media'
STATICFILES_DIRS = [
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    BASE_DIR / 'static',
    BASE_DIR / 'media',
]
# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#    'django.contrib.staticfiles.finders.DefaultStorageFinder',
)
#AUTH_USER_MODEL = 'content.User'
JAZZMIN_SETTINGS = {
    "site_title": _("BWL Admin"),
    'site_header':_("BWL Admin"),
    "language_chooser": True,
}
JAZZMIN_UI_TWEAKS = {
    "theme": "default",
}

CITIES_LIGHT_TRANSLATION_LANGUAGES = ['fr', 'en']
CITIES_LIGHT_INCLUDE_COUNTRIES = ['FR', 'CM']

BWL_PASSWORD_RESET_CODE_LENGTH = 6
BWL_PASSWORD_RESET_CODE_MAX_ATTEMPT = 3
BWL_PASSWORD_RESET_CODE_EXPIRATION = timedelta(minutes=5) #use time delta to set the min, day where the code will expire. E.g timedelta(minutes=5) means the code will expire in 5 min
 