# Generated by Django 3.1.6 on 2021-02-13 15:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cities_light', '0010_auto_20200508_1851'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ('created',),
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('name', models.CharField(max_length=250, verbose_name='Currency Name')),
                ('country', models.ManyToManyField(related_name='currencies', to='cities_light.Country', verbose_name='Country')),
            ],
            options={
                'verbose_name_plural': 'currencies',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('language', models.CharField(blank=True, choices=[('en', 'English'), ('fr', 'French')], help_text='If language is not specified the media will be display to any language', max_length=10, null=True, verbose_name='Language')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('type', models.CharField(choices=[('Instrument', 'Instrument'), ('message', 'Message'), ('music', 'Music')], max_length=30, verbose_name='Media Type')),
                ('duration', models.FloatField(verbose_name='Duration')),
                ('published_date', models.DateField(default=django.utils.timezone.now, verbose_name='Published Date')),
                ('url_link', models.CharField(blank=True, help_text='Use this field if the Music file is store externally to this application', max_length=255, null=True, verbose_name='External Url')),
                ('internal_link', models.FileField(blank=True, help_text='Use this field if the Music file is store Internally to this application', null=True, upload_to='catalog/music', verbose_name='Music File')),
                ('is_shareable', models.BooleanField(help_text='Check this field if the music can be shared', verbose_name='Can be shared')),
                ('is_downloadable', models.BooleanField(help_text='Check this field if the music can be downloaded', verbose_name='Can be downloaded')),
                ('is_free', models.BooleanField(help_text='Check this field if the music is free', verbose_name='Is Free')),
                ('is_active', models.BooleanField(default=True, help_text='Check this field if the music is active', verbose_name='Is Active')),
                ('copyright_info', models.TextField(blank=True, null=True, verbose_name='Copyright Information')),
                ('description', models.TextField(blank=True, help_text='Provide a brief description about the Music', null=True, verbose_name='Description')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artist_medias', to='content.artist', verbose_name='Author')),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('code', models.CharField(max_length=20, verbose_name='Code')),
                ('reference', models.CharField(max_length=50, verbose_name='Reference')),
                ('published_date', models.DateField(default=django.utils.timezone.now, verbose_name='Published Date')),
                ('users', models.ManyToManyField(blank=True, help_text="Use this field to assign Users to messages. Note: if a message is assigned to a user, it won't be available to other users", related_name='messages', to=settings.AUTH_USER_MODEL, verbose_name='Users')),
            ],
            options={
                'verbose_name_plural': 'Messages',
                'ordering': ('code',),
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('is_active', models.BooleanField(default=True, help_text='UnCheck this box if this offer is not available anymore', verbose_name='Is active?')),
                ('is_free', models.BooleanField(default=False, help_text='Check this box if this offer is free', verbose_name='Is Free?')),
                ('auto_assign', models.BooleanField(default=False, help_text='Check this box if this offer should be automatically assigned to new user', verbose_name='Auto Assign?')),
                ('is_sharable', models.BooleanField(default=False, help_text='Check this box if the messages and media in this offer can be shared with other user', verbose_name='Is Sharable?')),
                ('is_renewable', models.BooleanField(default=True, help_text='Check this box if this offer can be renew', verbose_name='Is Renewable?')),
                ('duration', models.IntegerField(help_text='In Day, 0 for unlimited', verbose_name='Offer Duration (In day)')),
                ('media', models.ManyToManyField(blank=True, related_name='media_offers', to='content.Media', verbose_name='Media')),
                ('message', models.ManyToManyField(blank=True, related_name='message_offers', to='content.Message', verbose_name='Message')),
            ],
            options={
                'verbose_name_plural': 'Offers',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='UserAlarmSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='Date Start')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='Date End')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Date End')),
                ('monday', models.BooleanField(blank=True, null=True, verbose_name='Monday')),
                ('tuesday', models.BooleanField(blank=True, null=True, verbose_name='Tuesday')),
                ('wednesday', models.BooleanField(blank=True, null=True, verbose_name='Wednesday')),
                ('thursday', models.BooleanField(blank=True, null=True, verbose_name='Thursday')),
                ('friday', models.BooleanField(blank=True, null=True, verbose_name='Friday')),
                ('saturday', models.BooleanField(blank=True, null=True, verbose_name='Saturday')),
                ('sunday', models.BooleanField(blank=True, null=True, verbose_name='Sunday')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_alarm_settings', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'ordering': ('created',),
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Testimony',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('user_name', models.CharField(blank=True, help_text='Use this field if the user is not an internal user', max_length=255, null=True, verbose_name='User Name')),
                ('message', models.TextField(verbose_name='Message')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_testimonies', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Testimonies',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('price', models.FloatField(verbose_name='Price')),
                ('is_active', models.BooleanField(default=True, help_text='UnCheck this box if this subscription is not available anymore', verbose_name='Is active?')),
                ('date_start', models.DateTimeField(verbose_name='Date Start')),
                ('date_end', models.DateTimeField(verbose_name='Date End')),
                ('payment_date', models.DateTimeField(verbose_name='Payment Date')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='currency_subscription', to='content.currency', verbose_name='Currency')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offer_subscription', to='content.offer', verbose_name='Offer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_subscriptions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Subscriptions',
                'ordering': ('date_start',),
            },
        ),
        migrations.CreateModel(
            name='SharedItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('expiration_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Expiration Date')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_user_shared_item', to=settings.AUTH_USER_MODEL, verbose_name='Shared From')),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_user_shared_item', to=settings.AUTH_USER_MODEL, verbose_name='Shared To')),
            ],
            options={
                'ordering': ('created',),
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('referral_link', models.CharField(blank=True, max_length=255, null=True, verbose_name='Referral Link')),
                ('referred_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referred_users', to=settings.AUTH_USER_MODEL, verbose_name='Referred User ')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_referrals', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'ordering': ('created',),
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('uid', models.CharField(blank=True, max_length=250, null=True, verbose_name='UID')),
                ('phone_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Phone Number')),
                ('language', models.CharField(blank=True, choices=[('en', 'English'), ('fr', 'French')], max_length=10, null=True, verbose_name='Language')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cities_light.country', verbose_name='Country')),
                ('default_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.currency', verbose_name='Default Currency')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'ordering': ('created',),
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('media', models.ManyToManyField(related_name='media_playlists', to='content.Media', verbose_name='Media')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_playlists', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Playlist',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='OfferPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('price', models.FloatField(verbose_name='Price')),
                ('is_active', models.BooleanField(default=True, help_text='UnCheck this box if this price is not available anymore', verbose_name='Is active?')),
                ('date_start', models.DateTimeField(blank=True, null=True, verbose_name='Date Start')),
                ('date_end', models.DateTimeField(blank=True, null=True, verbose_name='Date End')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offer_price_currencies', to='content.currency', verbose_name='Currency')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offer_prices', to='content.offer', verbose_name='Offer')),
            ],
            options={
                'verbose_name_plural': 'Offer Prices',
                'ordering': ('date_start',),
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('msg_listen', models.BooleanField(verbose_name='Message')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_notifications', to='content.message', verbose_name='Message')),
                ('music', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_notifications', to='content.media', verbose_name='Music')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_notifications', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'ordering': ('created',),
                'get_latest_by': 'created',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='media',
            name='message',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medias', to='content.message', verbose_name='Message'),
        ),
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Modified Dtae')),
                ('deposit', models.FloatField(verbose_name='Deposit Amount')),
                ('withdraw', models.FloatField(verbose_name='Withdraw Amount')),
                ('transcation_date', models.DateTimeField(verbose_name='Transaction Date')),
                ('transaction_ref_id', models.IntegerField(blank=True, null=True, verbose_name='Transaction Reference Id')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='currency_credits', to='content.currency', verbose_name='Currency')),
                ('transaction_ref_model', models.ForeignKey(blank=True, help_text='Models to which this Transaction refered', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='credits', to='contenttypes.contenttype', verbose_name='Transaction Reference Model')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name_plural': 'Credits',
                'ordering': ('transcation_date',),
            },
        ),
    ]
